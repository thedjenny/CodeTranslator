package mps.codetranslator.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptInputFile = createDescriptorForInputFile();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, "jetbrains.mps.core.xml");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptInputFile);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.InputFile:
        return myConceptInputFile;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForInputFile() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("mps.codetranslator", "InputFile", 0x8a874e526d4f4523L, 0xb46d8be6b8f66fb1L, 0x657ba80f68523446L);
    b.class_(false, false, true);
    b.super_("jetbrains.mps.core.xml.structure.XmlFile", 0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54c94c0L);
    b.origin("r:2280e64e-c656-4af4-b598-c133a6bb41b9(mps.codetranslator.structure)/7312623204094325830");
    b.version(2);
    return b.create();
  }
}
